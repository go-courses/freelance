syntax = "proto3";
package api;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message User {
    int64 id = 1;
    string name = 2;
    string utype = 3;
    int32 balance = 4;
}

message UserId {
    int64 id = 1;
}

message ManyUsers {
    repeated User users = 1;
}

message Task {
    int64 id = 1;
    string description = 2;
    int64 creator = 3;
    int64 executor = 4;
    int32 price = 5;
    string status = 6;
}

message TaskId {
    int64 id = 1;
}

message ManyTasks {
    repeated Task tasks = 1;
}

message Billing {
    int64 id = 1;
    int64 sender = 2;
    int64 reciever = 3;
    int32 amount = 4;
    google.protobuf.Timestamp time_bill = 5;
    int32 task_id = 6;
    string btype = 7;
}

message BillingId {
    int64 id = 1;
}

message ManyBillings {
    repeated Billing billings = 1;
}

service DoUsers {
    rpc CreateUser(User) returns (UserId) {
        option (google.api.http) = {
            post: "/api/user"
            body: "*"
        };
    }
    rpc SelectUser(UserId) returns (User) {
        option (google.api.http) = {
            get: "/api/user/{id}"
        };
    }
    rpc ListUsers(User) returns (ManyUsers) {
        option (google.api.http) = {
            get: "/api/users"
        };
    }
    rpc UpdateUser(User) returns (User) {
        option (google.api.http) = {
            post: "/api/user/{id}"
            body: "*"
        };
    }
    rpc DeleteUser(UserId) returns (User) {
        option (google.api.http) = {
            delete: "/api/user/{id}"
        };
    }
}

service DoTasks {
    rpc CreateTask(Task) returns (TaskId) {
        option (google.api.http) = {
            post: "/api/task"
            body: "*"
        };
    }
    rpc SelectTask(TaskId) returns (Task) {
        option (google.api.http) = {
            get: "/api/task/{id}"
        };
    }
    rpc ListTasks(Task) returns (ManyTasks) {
        option (google.api.http) = {
            get: "/api/tasks"
        };
    }
    rpc UpdateTask(Task) returns (Task) {
        option (google.api.http) = {
            post: "/api/task/{id}"
            body: "*"
        };
    }
    rpc DeleteTask(TaskId) returns (Task) {
        option (google.api.http) = {
            delete: "/api/task/{id}"
        };
    }
}

service DoBillings {
    rpc CreateBilling(Billing) returns (BillingId) {
        option (google.api.http) = {
            post: "/api/billing"
            body: "*"
        };
    }
    rpc SelectBilling(BillingId) returns (Billing) {
        option (google.api.http) = {
            get: "/api/billing/{id}"
        };
    }
    rpc ListBillings(Billing) returns (ManyBillings) {
        option (google.api.http) = {
            get: "/api/billings"
        };
    }
    rpc UpdateBilling(Billing) returns (Billing) {
        option (google.api.http) = {
            post: "/api/billing/{id}"
            body: "*"
        };
    }
    rpc DeleteBilling(BillingId) returns (Billing) {
        option (google.api.http) = {
            delete: "/api/billing/{id}"
        };
    }
}